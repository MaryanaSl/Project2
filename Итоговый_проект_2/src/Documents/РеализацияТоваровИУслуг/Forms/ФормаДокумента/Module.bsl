

//Скидки определяются по срезу последних регистра сведений Скидки. 
//Если скидка установлена и на конкретный элемент справочника Номенклатура, 
//и на номенклатурную группу, приоритет имеет скидка для конкретного элемента.

//Цена определяется по данным регистра сведений Цены и не пересчитывается 
//при изменении скидки. Сумма определяется по цене с учетом скидки как: 
//Сумма = Количество * Цена * (100 - Скидка) / 100 
//При изменении суммы изменяется скидка, но не цена, по обратной формуле: 
//Скидка = 100 * (1 - Сумма / Количество / Цена)     


&НаКлиенте
Функция СуммаПоСтроке(Строка)
	// возвращает сумму с учетом количества, цены и скидки 
	Строка.Сумма = Строка.Количество * Строка.Цена * (100 - Строка.Скидка) / 100;
	Возврат Строка.Сумма;  
	
КонецФункции


&НаКлиенте
Процедура ПриИзмененииНоменклатуры(ИзмененнаяСтрока)
	// Заполнять цену и скидку аналогично документам 
	//УстановкаЦен и УстановкаСкидок, а также заполнять ставку НДС 
	//и вызывать процедуры ПриИзмененииЦены, ПриИзмененииСкидки и ПриИзмененииСтавкиНДС  
	
	ЗаполнитьЦенуИСкидку (ИзмененнаяСтрока);
	ИзмененнаяСтрока.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС20");
	
	ПриИзмененииЦены(ИзмененнаяСтрока); 
	ПриИзмененииСкидки(ИзмененнаяСтрока);
	ПриИзмененииСтавкиНДС(ИзмененнаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЦенуИСкидку (ИзмененнаяСтрока)
	 
	//вызвать ЦеныВызовСервера.ЦенаНаДату и заполнить цену
	
	Если ЗначениеЗаполнено(ИзмененнаяСтрока.Номенклатура) Тогда
		ИзмененнаяСтрока.Цена = ЦеныВызовСервера.ЦенаНаДату(ИзмененнаяСтрока.Номенклатура, Объект.Дата); 
		ИзмененнаяСтрока.Скидка = ЦеныВызовСервера.СкидкаНаДату(ИзмененнаяСтрока.Номенклатура, Объект.Дата);
	КонецЕсли;  
	
	//Если Не ЗначениеЗаполнено(ИзмененнаяСтрока.Номенклатура) Тогда
	//	Шаблон = "По позиции ""%1"" цена ранее установлена не была";
	//	Сообщение = СтрШаблон(Шаблон, ИзмененнаяСтрока.Номенклатура);
	//	Сообщить (Сообщение);
	//КонецЕсли; 
	
КонецПроцедуры


&НаКлиенте
Процедура ПриИзмененииКоличества(ИзмененнаяСтрока)
	// Рассчитывать сумму вызовом СуммаПоСтроке() и вызывать ПриИзмененииСуммы()  
	СуммаПоСтроке(ИзмененнаяСтрока); 
	ПриИзмененииСуммы(ИзмененнаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииЦены(ИзмененнаяСтрока)
	// Рассчитывать сумму вызовом СуммаПоСтроке() и вызывать ПриИзмененииСуммы() 
    СуммаПоСтроке(ИзмененнаяСтрока);
	ПриИзмененииСуммы(ИзмененнаяСтрока);
КонецПроцедуры  

&НаКлиенте
Процедура ПриИзмененииСкидки(ИзмененнаяСтрока)
	// Рассчитывать сумму вызовом СуммаПоСтроке() и вызывать ПриИзмененииСуммы()
	СуммаПоСтроке(ИзмененнаяСтрока);
	ПриИзмененииСуммы(ИзмененнаяСтрока);
КонецПроцедуры


&НаКлиенте
Процедура ПриИзмененииСуммы(ИзмененнаяСтрока)
	// Рассчитывать сумму НДС по сумме и ставке вызовом НДСКлиентСервер.СуммаНДСПоСтавке() 
	РассчитатьСуммаНДС (ИзмененнаяСтрока); 
	Если ИзмененнаяСтрока.Количество=0 или ИзмененнаяСтрока.Цена=0 Тогда
		Возврат;
	Иначе 
		ИзмененнаяСтрока.Скидка = 100 * (1 - ИзмененнаяСтрока.Сумма / ИзмененнаяСтрока.Количество / ИзмененнаяСтрока.Цена)   
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСтавкиНДС(ИзмененнаяСтрока)
	// Рассчитывать сумму НДС по сумме и ставке вызовом НДСКлиентСервер.СуммаНДСПоСтавке() 
    РассчитатьСуммаНДС (ИзмененнаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыИУслугиКоличествоПриИзменении(Элемент)
	// Переопределить обработчики событий ПриИзменении полей ввода номенклатуры, 
	//количества, цены, скидки, суммы и ставки НДС, и вызывать из них процедуры 
	//ПриИзменении<...>, передавая в качестве параметра ТекущиеДанные таблицы.
    ТекДанные = Элементы.ТоварыИУслуги.ТекущиеДанные;
	  
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПриИзмененииКоличества(ТекДанные);
    
КонецПроцедуры

&НаКлиенте
Процедура ТоварыИУслугиЦенаПриИзменении(Элемент)
	// Переопределить обработчики событий ПриИзменении полей ввода номенклатуры, 
	//количества, цены, скидки, суммы и ставки НДС, и вызывать из них процедуры 
	//ПриИзменении<...>, передавая в качестве параметра ТекущиеДанные таблицы.
	
	ТекДанные = Элементы.ТоварыИУслуги.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПриИзмененииЦены(ТекДанные);  
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыИУслугиСуммаПриИзменении(Элемент)  
	/// Переопределить обработчики событий ПриИзменении полей ввода номенклатуры, 
	//количества, цены, скидки, суммы и ставки НДС, и вызывать из них процедуры 
	//ПриИзменении<...>, передавая в качестве параметра ТекущиеДанные таблицы.
	
	ТекДанные = Элементы.ТоварыИУслуги.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;    
	ПриИзмененииСуммы(ТекДанные);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыИУслугиСтавкаНДСПриИзменении(Элемент)
	// Переопределить обработчики событий ПриИзменении полей ввода номенклатуры, 
	//количества, цены, скидки, суммы и ставки НДС, и вызывать из них процедуры 
	//ПриИзменении<...>, передавая в качестве параметра ТекущиеДанные таблицы.
	
	ТекДанные = Элементы.ТоварыИУслуги.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;    
	ПриИзмененииСтавкиНДС(ТекДанные);

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммаНДС (ИзмененнаяСтрока)
	//получим значения в колоках текущей строки - свойство табличной части ТекущиеДанные
	//Получим коллекцию. в которой есть все данные по строке
	Если ПустаяСтрока(ИзмененнаяСтрока.СтавкаНДС) Тогда
		Возврат;
	Иначе ИзмененнаяСтрока.СуммаНДС = НДСКлиентСервер.СуммаНДСПоСтавке(ИзмененнаяСтрока.Сумма, ИзмененнаяСтрока.СтавкаНДС);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыИУслугиНоменклатураПриИзменении(Элемент)
	// Переопределить обработчики событий ПриИзменении полей ввода номенклатуры, 
	//количества, цены, скидки, суммы и ставки НДС, и вызывать из них процедуры 
	//ПриИзменении<...>, передавая в качестве параметра ТекущиеДанные таблицы.
    ТекДанные = Элементы.ТоварыИУслуги.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;    
	ПриИзмененииНоменклатуры(ТекДанные);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыИУслугиСкидкаПриИзменении(Элемент)
	// Переопределить обработчики событий ПриИзменении полей ввода номенклатуры, 
	//количества, цены, скидки, суммы и ставки НДС, и вызывать из них процедуры 
	//ПриИзменении<...>, передавая в качестве параметра ТекущиеДанные таблицы.  
	ТекДанные = Элементы.ТоварыИУслуги.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;    
	ПриИзмененииСкидки(ТекДанные);

КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	// Добавить команду Подбор, разместив ее в командной панели таблицы цен. 
	//В обработчике команды открыть форму выбора справочника Номенклатура 
	//с параметром ЗакрыватьПриВыборе = Ложь, указав в качестве владельца таблицу ТоварыИУслуги. 
	//а в обработчике события ОбработкаВыбора вызывая процедуру ПриИзмененииНоменклатуры, 
	//чтобы обеспечить получение цен и скидок и автоматический пересчет сумм.

    ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.ГруппыИЭлементы);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормы, Элементы.ТоварыИУслуги);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыИУслугиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	//Переопределить событие ОбработкаВыбора таблицы товары и услуги. 
	//В обработчике отказаться от стандартной обработки и, 
	//если в таблице еще нет выбранного значения - добавить строку и 
	//вызвать процедуру ПриИзмененииНоменклатуры, передав добавленную строку.  
	СтандартнаяОбработка = Ложь;
	
	// Выполним поиск в таблице строки с этой номенклатурой;
	ОтборСтрок = Новый Структура ("Номенклатура", ВыбранноеЗначение);
	НайденныеСтрокиВСпискеВыбранных = Объект.ТоварыИУслуги.НайтиСтроки(ОтборСтрок);
	
	
	//Если строка не найдена - создадим новую строку, в колонку 
	//Номенклатура укажем выбранное значение, 	
	Если НайденныеСтрокиВСпискеВыбранных.Количество() = 0 Тогда
		
		НоваяСтрокаТаблицы = Объект.ТоварыИУслуги.Добавить();
		НоваяСтрокаТаблицы.Номенклатура = ВыбранноеЗначение;     
		ПриИзмененииНоменклатуры(НоваяСтрокаТаблицы);
		
	Иначе 
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

